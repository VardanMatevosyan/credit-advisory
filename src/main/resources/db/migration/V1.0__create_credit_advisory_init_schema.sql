create schema if not exists credit_advisory;

create table if not exists credit_advisory.applicants (
    id int not null generated by default as identity,
    cognito_username varchar not null,
    cognito_group varchar not null,
    email varchar not null,
    ssn varchar not null,
    first_name varchar not null,
    last_name varchar not null,
    city varchar not null,
    street varchar not null,
    number varchar not null,
    zip varchar not null,
    apt varchar not null,

    constraint applicants_ssn_unique unique (ssn),
    constraint applicants_cognito_username_unique unique (cognito_username),
    constraint applicants_email_unique unique (email),
    constraint applicants_id_pk primary key (id)
);

create table if not exists credit_advisory.advisors (
    id int not null generated by default as identity,
    cognito_username varchar not null,
    cognito_group varchar not null,
    email varchar not null,
    first_name varchar not null,
    last_name varchar not null,
    role varchar not null,
    constraint advisor_id_pk primary key (id),
    constraint advisors_cognito_username_unique unique (cognito_username),
    constraint advisors_email_unique unique (email)
);

create table if not exists credit_advisory.applications (
    id int not null generated by default as identity,
    applicant_id int not null,
    advisor_id int,
    amount decimal not null,
    status varchar not null default 'NEW',
    created_at timestamp not null default now(),
    assign_at timestamp not null default now(),
    resolved_at timestamp not null default now(),

    constraint applications_id_pk primary key (id),
    constraint applications_applicant_id_fk foreign key (applicant_id) references credit_advisory.applicants (id),
    constraint applications_advisor_id_fk foreign key (advisor_id) references credit_advisory.applicants (id)
);

create table if not exists credit_advisory.applicant_phones (
    id int not null generated by default as identity,
    applicant_id int not null,
    number int not null,
    type varchar not null,

    constraint applicant_phones_applicant_id_fk foreign key (applicant_id) references credit_advisory.applicants (id),
    constraint applicant_phones_id_pk primary key (id)
);